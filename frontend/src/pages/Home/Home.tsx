import { useEffect } from "react";
import { useSelector, useDispatch } from "react-redux";
import type { RootState, AppDispatch } from "../../store/store";
import { fetchCurrentUser } from "../../store/slices/profileSlice";
import { logoutUser } from "../../store/slices/authSlice";
import styles from "./Home.module.scss";
import { Link, useNavigate } from "react-router-dom";
import { getToken } from "../../utils/localStorage";

const Home = () => {
  const dispatch = useDispatch<AppDispatch>();
  const { user, } = useSelector((state: RootState) => state.auth);
  const navigate = useNavigate();

  useEffect(() => {
  const token = getToken();
  if (token) {
    dispatch(fetchCurrentUser());
  }
  }, [dispatch]);

  const handleLogout = async () => {
    try {
      await dispatch(logoutUser()).unwrap();
      navigate("/");
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ:', error);
    }
  };

  return (
    <div className={styles.homePage}>
      <div className={styles.backgroundAnimation}></div>

      <header className={styles.header}>
        <div className={styles.topBar}>
          <div className={styles.logoContainer}>
            <img src="/app.png" alt="Logo" className={styles.logo} />
            <h1 className={styles.title}>
              My<span>Events</span>
            </h1>
          </div>

        {user ? (
          <div className={styles.userMenu}>
            <span className={styles.userName}>{user.name}</span>
            <button className={styles.logoutButton} onClick={handleLogout}>
              –í—ã–π—Ç–∏
            </button>
            <button
              className={styles.primaryButton}
              onClick={() => navigate("/profile")}
            >
              –ü—Ä–æ—Ñ–∏–ª—å
            </button>
          </div>
        ) : (
          <div className={styles.authButtons}>
            <Link to="/login">
              <button className={styles.authButton}>–í–æ–π—Ç–∏</button>
            </Link>
            <Link to="/register">
              <button className={styles.authButton}>–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç</button>
            </Link>
          </div>
        )}
        </div>

        <p className={styles.subtitle}>
          –ò–∑–º–µ–Ω–∏—Ç–µ –ø–æ–¥—Ö–æ–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º–∏. –°–æ–∑–¥–∞–≤–∞–π—Ç–µ, –æ—Ä–≥–∞–Ω–∏–∑—É–π—Ç–µ –∏
          –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π—Ç–µ —Å–æ–±—ã—Ç–∏—è —Å –Ω–µ–ø—Ä–µ–≤–∑–æ–π–¥–µ–Ω–Ω–æ–π –ø—Ä–æ—Å—Ç–æ—Ç–æ–π –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é.
        </p>
      </header>

      <div className={styles.features}>
        <div className={styles.row}>
          <div
            className={styles.featureCard}
            onClick={() => navigate("/events")}
          >
            <div className={styles.featureIcon}>üìù</div>
            <h3>–ú–æ–∏ —Å–æ–±—ã—Ç–∏—è</h3>
            <p>
              –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏ —É–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º–∏ –∑–∞ —Å—á–∏—Ç–∞–Ω–Ω—ã–µ –º–∏–Ω—É—Ç—ã —Å
              –ø–æ–º–æ—â—å—é —É–¥–æ–±–Ω–æ–≥–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
            </p>
          </div>
        </div>

        <div className={styles.row}>
          <div className={styles.featureCard}>
            <div className={styles.featureIcon}>üë•</div>
            <h3>–ì—Ä—É–ø–ø–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è</h3>
            <p>–û—Ä–≥–∞–Ω–∏–∑—É–π—Ç–µ —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è —Å —Å–µ–º—å–µ–π –∏ –¥—Ä—É–∑—å—è–º–∏.</p>
            <p>(–Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)</p>
          </div>
          <div className={styles.featureCard}>
            <div className={styles.featureIcon}>üìà</div>
            <h3>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π</h3>
            <p>
              –ü–æ–ª—É—á–∞–π—Ç–µ –ø–æ–ª–µ–∑–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤–∞—à–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∏
              –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ –≥–æ—Å—Ç–µ–π.
            </p>
            <p>(–Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)</p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Home;