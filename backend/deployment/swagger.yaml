openapi: 3.0.0
info:
  title: API для управления мероприятиями и пользователями
  version: 1.0.0
  description: Документация для API мероприятий и пользователей
servers:
  - url: 'http://localhost:5000/api'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: API key для доступа к endpoints

security:
  - ApiKeyAuth: []

paths:
  /events:
    get:
      summary: получение списка мероприятий
      responses:
        '200':
          description: Успешный ответ с данными всех мероприятий
    post:
      summary: создание мероприятия
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                date:
                  type: string
                  format: date
                location:
                  type: string
                createdBy:
                  type: string
      responses:
        '201':
          description: мероприятие успешно создано

  /events/{id}:
    get:
      summary: получение мероприятия по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: мероприятие найдено
        '404':
          description: мероприятие не найдено
    put:
      summary: обновление мероприятия по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                date:
                  type: string
                  format: date
                location:
                  type: string
                createdBy:
                  type: string
      responses:
        '200':
          description: Мероприятие успешно обновлено
        '404':
          description: Мероприятие не найдено
    delete:
      summary: удаление мероприятия по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Мероприятие успешно удалено
        '404':
          description: Мероприятие не найдено

  /users:
    post:
      summary: создание нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: Пользователь успешно создан
    get:
      summary: получение информации пользователей
      responses:
        '200':
          description: Пользователь найден
        '404':
          description: Пользователь не найден
  /auth/register:
    post:
      summary: Регистрация нового пользователя (только для администратора)
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Пользователь успешно зарегистрирован
        '400':
          description: Пользователь с таким email уже существует

  /auth/login:
    post:
      summary: Авторизация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Успешная авторизация, возвращает токен
        '400':
          description: Ошибка валидации (отсутствует email или пароль)
        '404':
          description: Пользователь не найден
        '401':
          description: Неверный пароль
  /auth/refresh:
    post:
      summary: рефреш токена доступа
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Успешная авторизация, возвращает токен
        '400':
          description: Недействительный refresh token
